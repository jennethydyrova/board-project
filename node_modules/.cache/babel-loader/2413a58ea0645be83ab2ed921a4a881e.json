{"ast":null,"code":"import _objectSpread from\"/Users/dzennetahydyrova/board-project2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/dzennetahydyrova/board-project2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/dzennetahydyrova/board-project2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import db from\"../../firebaseConfig\";import Board from\"../../components/board/Board\";import BoardForm from\"../../components/boardForm/BoardForm\";import\"antd/dist/antd.css\";import{Card,List,Menu,Dropdown,Row,Col}from\"antd\";import{byTitle,byTitleD,byDate,byDateD}from\"../../functions\";import SortBy from\"../../components/sortBy/SortBy\";import ListView from\"../../components/listView\";import BoardViewImg from\"./chess-board.svg\";var BoardsContainer=function BoardsContainer(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),boards=_useState2[0],setBoards=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),listView=_useState4[0],setListView=_useState4[1];var sortBoards=function sortBoards(sortedBy){switch(sortedBy){case\"2\":setBoards(function(prevBoards){var newBoards=_toConsumableArray(prevBoards);var newBoard=newBoards.sort(byTitle);return newBoard;});break;case\"4\":setBoards(function(prevBoards){var newBoards=_toConsumableArray(prevBoards);var newBoard=newBoards.sort(byTitleD);return newBoard;});break;case\"1\":setBoards(function(prevBoards){var newBoards=_toConsumableArray(prevBoards);var newBoard=newBoards.sort(byDate);return newBoard;});break;case\"3\":setBoards(function(prevBoards){var newBoards=_toConsumableArray(prevBoards);var newBoard=newBoards.sort(byDateD);return newBoard;});break;default:setBoards(function(prevBoards){var newBoards=_toConsumableArray(prevBoards);var newBoard=newBoards.sort(byTitle);return newBoard;});}};useEffect(function(){return db.firestore().collection(\"boards\").onSnapshot(function(snapshot){if(snapshot.docChanges().length===0){}snapshot.docChanges().forEach(function(change){if(change.type===\"added\"){setBoards(function(prevBoards){return[].concat(_toConsumableArray(prevBoards),[_objectSpread(_objectSpread({},change.doc.data()),{},{id:change.doc.id})]);});}if(change.type===\"modified\"){setBoards(function(prevBoards){var newArrBoards=_toConsumableArray(prevBoards);var index=newArrBoards.findIndex(function(el){return el.id===change.doc.id;});if(index!==-1){newArrBoards[index]=_objectSpread(_objectSpread({},change.doc.data()),{},{id:change.doc.id});}return newArrBoards;});}if(change.type===\"removed\"){setBoards(function(prevBoards){var newArrBoards=_toConsumableArray(prevBoards);var index=newArrBoards.findIndex(function(el){return el.id===change.doc.id;});if(index!==-1){newArrBoards.splice(index,1);}return newArrBoards;});}});});},[]);var handleChange=function handleChange(){setListView(!listView);};var gridStyle={margin:\"15px\",width:\"30%\",borderRadius:\"10px\"};var dropdownView=function dropdownView(){return/*#__PURE__*/React.createElement(Menu,{onClick:function onClick(e){return handleChange(e);}},/*#__PURE__*/React.createElement(Menu.Item,{key:\"1\"},\"Board\"),/*#__PURE__*/React.createElement(Menu.Item,{key:\"2\"},\"List\"));};var boardViewStyle={width:\"15px\",color:\"white\",marginRight:\"1rem\"};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,{className:\"content-header\"},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(BoardForm,null)),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{style:{marginTop:\"5rem\",marginRight:\"0.2rem\"}},/*#__PURE__*/React.createElement(\"p\",null,\"View\")),/*#__PURE__*/React.createElement(Col,{style:{marginTop:\"5rem\",marginLeft:\"0.5rem\"}},/*#__PURE__*/React.createElement(Dropdown,{overlay:dropdownView},/*#__PURE__*/React.createElement(\"img\",{src:BoardViewImg,style:boardViewStyle,onClick:function onClick(e){return e.preventDefault();},alt:\"board icon\"}))),/*#__PURE__*/React.createElement(Col,{style:{marginTop:\"5rem\",marginRight:\"3rem\"}},/*#__PURE__*/React.createElement(SortBy,{sortBoards:sortBoards})))),/*#__PURE__*/React.createElement(Row,null,listView?boards.map(function(el){return/*#__PURE__*/React.createElement(Card.Grid,{style:gridStyle},/*#__PURE__*/React.createElement(Board,{key:el.id,boardTitle:el.title,boardsItems:el.items?el.items:[],boardsId:el.id}));}):boards.map(function(el){return/*#__PURE__*/React.createElement(List.Item,null,/*#__PURE__*/React.createElement(ListView,{key:el.id,boardTitle:el.title,boardsItems:el.items?el.items:[],boardsId:el.id}));})));};export default BoardsContainer;","map":{"version":3,"sources":["/Users/dzennetahydyrova/board-project2/src/containers/boards/BoardsContainer.js"],"names":["React","useState","useEffect","db","Board","BoardForm","Card","List","Menu","Dropdown","Row","Col","byTitle","byTitleD","byDate","byDateD","SortBy","ListView","BoardsContainer","boards","setBoards","listView","setListView","sortBoards","sortedBy","prevBoards","newBoards","newBoard","sort","firestore","collection","onSnapshot","snapshot","docChanges","length","forEach","change","type","doc","data","id","newArrBoards","index","findIndex","el","splice","handleChange","gridStyle","margin","width","borderRadius","dropdownView","e","boardViewStyle","color","marginRight","marginTop","marginLeft","BoardViewImg","preventDefault","map","title","items"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport db from \"../../firebaseConfig\";\nimport Board from \"../../components/board/Board\";\nimport BoardForm from \"../../components/boardForm/BoardForm\";\nimport \"antd/dist/antd.css\";\nimport { Card, List, Menu, Dropdown, Row, Col } from \"antd\";\nimport { byTitle, byTitleD, byDate, byDateD } from \"../../functions\";\nimport SortBy from \"../../components/sortBy/SortBy\";\nimport ListView from \"../../components/listView\";\nimport BoardViewImg from \"./chess-board.svg\";\n\nconst BoardsContainer = () => {\n  const [boards, setBoards] = useState([]);\n  const [listView, setListView] = useState(true);\n\n  const sortBoards = (sortedBy) => {\n    switch (sortedBy) {\n      case \"2\":\n        setBoards((prevBoards) => {\n          const newBoards = [...prevBoards];\n          let newBoard = newBoards.sort(byTitle);\n          return newBoard;\n        });\n        break;\n      case \"4\":\n        setBoards((prevBoards) => {\n          const newBoards = [...prevBoards];\n          let newBoard = newBoards.sort(byTitleD);\n          return newBoard;\n        });\n        break;\n      case \"1\":\n        setBoards((prevBoards) => {\n          const newBoards = [...prevBoards];\n          let newBoard = newBoards.sort(byDate);\n          return newBoard;\n        });\n        break;\n      case \"3\":\n        setBoards((prevBoards) => {\n          const newBoards = [...prevBoards];\n          let newBoard = newBoards.sort(byDateD);\n          return newBoard;\n        });\n        break;\n      default:\n        setBoards((prevBoards) => {\n          const newBoards = [...prevBoards];\n          let newBoard = newBoards.sort(byTitle);\n          return newBoard;\n        });\n    }\n  };\n\n  useEffect(() => {\n    return db\n      .firestore()\n      .collection(\"boards\")\n      .onSnapshot((snapshot) => {\n        if (snapshot.docChanges().length === 0) {\n        }\n        snapshot.docChanges().forEach((change) => {\n          if (change.type === \"added\") {\n            setBoards((prevBoards) => [\n              ...prevBoards,\n              { ...change.doc.data(), id: change.doc.id },\n            ]);\n          }\n          if (change.type === \"modified\") {\n            setBoards((prevBoards) => {\n              const newArrBoards = [...prevBoards];\n              let index = newArrBoards.findIndex(\n                (el) => el.id === change.doc.id\n              );\n              if (index !== -1) {\n                newArrBoards[index] = {\n                  ...change.doc.data(),\n                  id: change.doc.id,\n                };\n              }\n              return newArrBoards;\n            });\n          }\n          if (change.type === \"removed\") {\n            setBoards((prevBoards) => {\n              const newArrBoards = [...prevBoards];\n              let index = newArrBoards.findIndex(\n                (el) => el.id === change.doc.id\n              );\n\n              if (index !== -1) {\n                newArrBoards.splice(index, 1);\n              }\n              return newArrBoards;\n            });\n          }\n        });\n      });\n  }, []);\n\n  const handleChange = () => {\n    setListView(!listView);\n  };\n\n  const gridStyle = {\n    margin: \"15px\",\n    width: \"30%\",\n    borderRadius: \"10px\",\n  };\n\n  const dropdownView = () => {\n    return (\n      <Menu onClick={(e) => handleChange(e)}>\n        <Menu.Item key=\"1\">Board</Menu.Item>\n        <Menu.Item key=\"2\">List</Menu.Item>\n      </Menu>\n    );\n  };\n  const boardViewStyle = {\n    width: \"15px\",\n    color: \"white\",\n    marginRight: \"1rem\",\n  };\n\n  return (\n    <div>\n      <Row className=\"content-header\">\n        <Col>\n          <BoardForm />\n        </Col>\n        <Row>\n          <Col style={{ marginTop: \"5rem\", marginRight: \"0.2rem\" }}>\n            <p>View</p>\n          </Col>\n          <Col\n            style={{\n              marginTop: \"5rem\",\n              marginLeft: \"0.5rem\",\n            }}\n          >\n            <Dropdown overlay={dropdownView}>\n              <img\n                src={BoardViewImg}\n                style={boardViewStyle}\n                onClick={(e) => e.preventDefault()}\n                alt=\"board icon\"\n              />\n            </Dropdown>\n          </Col>\n\n          <Col style={{ marginTop: \"5rem\", marginRight: \"3rem\" }}>\n            <SortBy sortBoards={sortBoards} />\n          </Col>\n        </Row>\n      </Row>\n      <Row>\n        {listView\n          ? boards.map((el) => {\n              return (\n                <Card.Grid style={gridStyle}>\n                  <Board\n                    key={el.id}\n                    boardTitle={el.title}\n                    boardsItems={el.items ? el.items : []}\n                    boardsId={el.id}\n                  />\n                </Card.Grid>\n              );\n            })\n          : boards.map((el) => {\n              return (\n                <List.Item>\n                  <ListView\n                    key={el.id}\n                    boardTitle={el.title}\n                    boardsItems={el.items ? el.items : []}\n                    boardsId={el.id}\n                  />\n                </List.Item>\n              );\n            })}\n      </Row>\n    </div>\n  );\n};\n\nexport default BoardsContainer;\n"]},"metadata":{},"sourceType":"module"}