{"ast":null,"code":"import _regeneratorRuntime from\"/Users/dzennetahydyrova/board-project2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/dzennetahydyrova/board-project2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/dzennetahydyrova/board-project2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/Users/dzennetahydyrova/board-project2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/dzennetahydyrova/board-project2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import db from\"../../firebaseConfig\";import{Collapse,Card}from\"antd\";var CompletedTasks=function CompletedTasks(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),completedTaskList=_useState2[0],setCompletedTaskList=_useState2[1];var Panel=Collapse.Panel;var fetchCompletedTasks=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,data,_loop,i;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return db.firestore().collection(\"boards\").get();case 2:res=_context.sent;data=res.docs;_loop=function _loop(i){setCompletedTaskList(function(prevState){return[].concat(_toConsumableArray(prevState),[_objectSpread(_objectSpread({},data[i].data()),{},{id:data[i].id})]);});};for(i=0;i<data.length;i++){_loop(i);}return _context.abrupt(\"return\",completedTaskList);case 7:case\"end\":return _context.stop();}}},_callee);}));return function fetchCompletedTasks(){return _ref.apply(this,arguments);};}();useEffect(function(){fetchCompletedTasks();// eslint-disable-next-line\n},[]);var gridStyle={width:\"25%\",textAlign:\"center\",margin:\"10px\"};return completedTaskList.map(function(item){return/*#__PURE__*/React.createElement(Collapse,{style:{width:\"100%\"},defaultActiveKey:[\"1\"],className:\"completed\"},/*#__PURE__*/React.createElement(Panel,{className:\"completed-panel\",header:item.title,key:item.id},item.items.filter(function(el){return el.completed===true;}).map(function(el){return/*#__PURE__*/React.createElement(Card.Grid,{className:\"completed-card\",title:el.title,style:gridStyle},/*#__PURE__*/React.createElement(\"p\",null,\"Title: \",el.title),/*#__PURE__*/React.createElement(\"p\",null,\"Assigner: \",el.assigner),/*#__PURE__*/React.createElement(\"p\",null,\"Assignee: \",el.assignee),/*#__PURE__*/React.createElement(\"p\",null,\"Due date: \",el.due));})));});};export default CompletedTasks;","map":{"version":3,"sources":["/Users/dzennetahydyrova/board-project2/src/components/completed/index.js"],"names":["React","useState","useEffect","db","Collapse","Card","CompletedTasks","completedTaskList","setCompletedTaskList","Panel","fetchCompletedTasks","firestore","collection","get","res","data","docs","i","prevState","id","length","gridStyle","width","textAlign","margin","map","item","title","items","filter","el","completed","assigner","assignee","due"],"mappings":"qxBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,EAAP,KAAe,sBAAf,CACA,OAASC,QAAT,CAAmBC,IAAnB,KAA+B,MAA/B,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,eACuBL,QAAQ,CAAC,EAAD,CAD/B,wCACpBM,iBADoB,eACDC,oBADC,kBAEnBC,CAAAA,KAFmB,CAETL,QAFS,CAEnBK,KAFmB,CAI3B,GAAMC,CAAAA,mBAAmB,0FAAG,8KACRP,CAAAA,EAAE,CAACQ,SAAH,GAAeC,UAAf,CAA0B,QAA1B,EAAoCC,GAApC,EADQ,QACpBC,GADoB,eAEpBC,IAFoB,CAEbD,GAAG,CAACE,IAFS,sBAGjBC,CAHiB,EAIxBT,oBAAoB,CAAC,SAACU,SAAD,qCAChBA,SADgB,kCAEdH,IAAI,CAACE,CAAD,CAAJ,CAAQF,IAAR,EAFc,MAEEI,EAAE,CAAEJ,IAAI,CAACE,CAAD,CAAJ,CAAQE,EAFd,MAAD,CAApB,CAJwB,EAG1B,IAASF,CAAT,CAAa,CAAb,CAAgBA,CAAC,CAAGF,IAAI,CAACK,MAAzB,CAAiCH,CAAC,EAAlC,CAAsC,OAA7BA,CAA6B,EAKrC,CARyB,gCASnBV,iBATmB,wDAAH,kBAAnBG,CAAAA,mBAAmB,0CAAzB,CAYAR,SAAS,CAAC,UAAM,CACdQ,mBAAmB,GACnB;AACD,CAHQ,CAGN,EAHM,CAAT,CAKA,GAAMW,CAAAA,SAAS,CAAG,CAChBC,KAAK,CAAE,KADS,CAEhBC,SAAS,CAAE,QAFK,CAGhBC,MAAM,CAAE,MAHQ,CAAlB,CAMA,MAAOjB,CAAAA,iBAAiB,CAACkB,GAAlB,CAAsB,SAACC,IAAD,CAAU,CACrC,mBACE,oBAAC,QAAD,EACE,KAAK,CAAE,CAAEJ,KAAK,CAAE,MAAT,CADT,CAEE,gBAAgB,CAAE,CAAC,GAAD,CAFpB,CAGE,SAAS,CAAC,WAHZ,eAKE,oBAAC,KAAD,EAAO,SAAS,CAAC,iBAAjB,CAAmC,MAAM,CAAEI,IAAI,CAACC,KAAhD,CAAuD,GAAG,CAAED,IAAI,CAACP,EAAjE,EACGO,IAAI,CAACE,KAAL,CACEC,MADF,CACS,SAACC,EAAD,QAAQA,CAAAA,EAAE,CAACC,SAAH,GAAiB,IAAzB,EADT,EAEEN,GAFF,CAEM,SAACK,EAAD,CAAQ,CACX,mBACE,oBAAC,IAAD,CAAM,IAAN,EACE,SAAS,CAAC,gBADZ,CAEE,KAAK,CAAEA,EAAE,CAACH,KAFZ,CAGE,KAAK,CAAEN,SAHT,eAKE,uCAAWS,EAAE,CAACH,KAAd,CALF,cAME,0CAAcG,EAAE,CAACE,QAAjB,CANF,cAOE,0CAAcF,EAAE,CAACG,QAAjB,CAPF,cAQE,0CAAcH,EAAE,CAACI,GAAjB,CARF,CADF,CAYD,CAfF,CADH,CALF,CADF,CA0BD,CA3BM,CAAP,CA4BD,CAvDD,CAyDA,cAAe5B,CAAAA,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport db from \"../../firebaseConfig\";\nimport { Collapse, Card } from \"antd\";\n\nconst CompletedTasks = () => {\n  const [completedTaskList, setCompletedTaskList] = useState([]);\n  const { Panel } = Collapse;\n\n  const fetchCompletedTasks = async () => {\n    const res = await db.firestore().collection(\"boards\").get();\n    const data = res.docs;\n    for (let i = 0; i < data.length; i++) {\n      setCompletedTaskList((prevState) => [\n        ...prevState,\n        { ...data[i].data(), id: data[i].id },\n      ]);\n    }\n    return completedTaskList;\n  };\n\n  useEffect(() => {\n    fetchCompletedTasks();\n    // eslint-disable-next-line\n  }, []);\n\n  const gridStyle = {\n    width: \"25%\",\n    textAlign: \"center\",\n    margin: \"10px\",\n  };\n\n  return completedTaskList.map((item) => {\n    return (\n      <Collapse\n        style={{ width: \"100%\" }}\n        defaultActiveKey={[\"1\"]}\n        className=\"completed\"\n      >\n        <Panel className=\"completed-panel\" header={item.title} key={item.id}>\n          {item.items\n            .filter((el) => el.completed === true)\n            .map((el) => {\n              return (\n                <Card.Grid\n                  className=\"completed-card\"\n                  title={el.title}\n                  style={gridStyle}\n                >\n                  <p>Title: {el.title}</p>\n                  <p>Assigner: {el.assigner}</p>\n                  <p>Assignee: {el.assignee}</p>\n                  <p>Due date: {el.due}</p>\n                </Card.Grid>\n              );\n            })}\n        </Panel>\n      </Collapse>\n    );\n  });\n};\n\nexport default CompletedTasks;\n"]},"metadata":{},"sourceType":"module"}