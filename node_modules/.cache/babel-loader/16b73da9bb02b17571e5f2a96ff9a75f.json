{"ast":null,"code":"var _jsxFileName = \"/Users/dzennetahydyrova/board-project2/board-project/src/components/item/Item.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport { Collapse } from \"antd\";\nimport db from \"../../firebaseConfig\";\nimport * as firebase from \"firebase/app\";\nimport Modal from \"react-modal\";\nimport { DatePicker, message } from \"antd\";\nimport { Row, Space, Checkbox, Button, Col, Form, Typography } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"moment/locale/zh-cn\";\nimport moment from \"moment\";\nimport EditForm from \"../EditForm/EditForm\";\n\nconst Item = ({\n  task,\n  boardsId,\n  boardsItems,\n  setItems\n}) => {\n  const currentDate = new Date();\n  currentDate.setDate(currentDate.getDate() + 1);\n  const [showResults, setShowResults] = React.useState(true);\n  const {\n    Title\n  } = Typography;\n  const [userInput, setUserInput] = useState({\n    title: task.title,\n    due: task.due,\n    assigner: task.assigner,\n    assignee: task.assignee,\n    id: task.id,\n    completed: task.completed\n  }); // const [checked, setChecked] = useState(false)\n\n  const {\n    Panel\n  } = Collapse;\n  const [modalOpened, setModalOpened] = useState({\n    modalOpen: false\n  });\n  const [editedTask, setEditedTask] = useState(task);\n  const style = {\n    items: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\"\n    }\n  };\n\n  const handleClick = e => {\n    db.firestore().collection(\"boards\").doc(boardsId).update({\n      items: firebase.firestore.FieldValue.arrayRemove(task)\n    });\n  };\n\n  useEffect(() => {\n    setEditedTask(userInput);\n  }, [userInput]);\n\n  const handleModal = () => {\n    setModalOpened({\n      modalOpen: modalOpened.modalOpen === true ? false : true\n    });\n  };\n\n  const completeHandler = e => {\n    e.preventDefault();\n    completeStatus();\n    setShowResults(false);\n  };\n\n  const completeStatus = async () => {\n    const modifiedItems = [...boardsItems];\n    const itemIndex = modifiedItems.findIndex(item => item.id === task.id);\n    modifiedItems[itemIndex].completed = !modifiedItems[itemIndex].completed;\n    await db.collection(\"boards\").doc(boardsId).update({\n      items: modifiedItems\n    });\n  };\n\n  const collapseStyle = {\n    backgroundColor: \"282934\"\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: style.items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Collapse, {\n    className: \"item-title\",\n    defaultActiveKey: [\"1\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Panel, {\n    header: task.title,\n    key: task.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"item-element\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Assigner: \", task.assigner), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"item-element\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Assignee: \", task.assignee), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"item-element\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Due date: \", task.due), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-info\",\n    type: \"submit\",\n    size: \"sm\",\n    onClick: e => handleModal(e),\n    className: \"form-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(EditForm, {\n    task: task,\n    boardsId: boardsId,\n    boardsItems: boardsItems,\n    modalOpened: modalOpened,\n    setModalOpened: setModalOpened,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    style: {\n      marginLeft: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DeleteOutlined, {\n    style: {\n      cursor: \"pointer\"\n    },\n    onClick: e => handleClick(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    onClick: e => completeHandler(e),\n    checked: task.completed === true ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Item;","map":{"version":3,"sources":["/Users/dzennetahydyrova/board-project2/board-project/src/components/item/Item.js"],"names":["React","useState","useEffect","DeleteOutlined","Collapse","db","firebase","Modal","DatePicker","message","Row","Space","Checkbox","Button","Col","Form","Typography","moment","EditForm","Item","task","boardsId","boardsItems","setItems","currentDate","Date","setDate","getDate","showResults","setShowResults","Title","userInput","setUserInput","title","due","assigner","assignee","id","completed","Panel","modalOpened","setModalOpened","modalOpen","editedTask","setEditedTask","style","items","display","flexDirection","justifyContent","handleClick","e","firestore","collection","doc","update","FieldValue","arrayRemove","handleModal","completeHandler","preventDefault","completeStatus","modifiedItems","itemIndex","findIndex","item","collapseStyle","backgroundColor","marginLeft","cursor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport { Collapse } from \"antd\";\nimport db from \"../../firebaseConfig\";\nimport * as firebase from \"firebase/app\";\nimport Modal from \"react-modal\";\nimport { DatePicker, message } from \"antd\";\nimport { Row, Space, Checkbox, Button, Col, Form, Typography } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"moment/locale/zh-cn\";\nimport moment from \"moment\";\nimport EditForm from \"../EditForm/EditForm\";\n\nconst Item = ({ task, boardsId, boardsItems, setItems }) => {\n  const currentDate = new Date();\n  currentDate.setDate(currentDate.getDate() + 1);\n\n  const [showResults, setShowResults] = React.useState(true);\n  const { Title } = Typography;\n  const [userInput, setUserInput] = useState({\n    title: task.title,\n    due: task.due,\n    assigner: task.assigner,\n    assignee: task.assignee,\n    id: task.id,\n    completed: task.completed,\n  });\n\n  // const [checked, setChecked] = useState(false)\n\n  const { Panel } = Collapse;\n  const [modalOpened, setModalOpened] = useState({ modalOpen: false });\n\n  const [editedTask, setEditedTask] = useState(task);\n\n  const style = {\n    items: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n    },\n  };\n\n  const handleClick = (e) => {\n    db.firestore()\n      .collection(\"boards\")\n      .doc(boardsId)\n      .update({\n        items: firebase.firestore.FieldValue.arrayRemove(task),\n      });\n  };\n\n  useEffect(() => {\n    setEditedTask(userInput);\n  }, [userInput]);\n\n  const handleModal = () => {\n    setModalOpened({\n      modalOpen: modalOpened.modalOpen === true ? false : true,\n    });\n  };\n\n  const completeHandler = (e) => {\n    e.preventDefault();\n    completeStatus();\n    setShowResults(false);\n  };\n\n  const completeStatus = async () => {\n    const modifiedItems = [...boardsItems];\n    const itemIndex = modifiedItems.findIndex((item) => item.id === task.id);\n    modifiedItems[itemIndex].completed = !modifiedItems[itemIndex].completed;\n    await db.collection(\"boards\").doc(boardsId).update({\n      items: modifiedItems,\n    });\n  };\n\n  const collapseStyle = {\n    backgroundColor: \"282934\",\n  };\n\n  return (\n    <div style={style.items}>\n      <Collapse className=\"item-title\" defaultActiveKey={[\"1\"]}>\n        <Panel header={task.title} key={task.id}>\n          <p className=\"item-element\">Assigner: {task.assigner}</p>\n          <p className=\"item-element\">Assignee: {task.assignee}</p>\n          <p className=\"item-element\">Due date: {task.due}</p>\n          <Button\n            variant=\"outline-info\"\n            type=\"submit\"\n            size=\"sm\"\n            onClick={(e) => handleModal(e)}\n            className=\"form-btn\"\n          >\n            Edit\n          </Button>\n          <EditForm\n            task={task}\n            boardsId={boardsId}\n            boardsItems={boardsItems}\n            modalOpened={modalOpened}\n            setModalOpened={setModalOpened}\n          />\n        </Panel>\n      </Collapse>\n      <Col style={{ marginLeft: \"1rem\" }}>\n        <DeleteOutlined\n          style={{ cursor: \"pointer\" }}\n          onClick={(e) => handleClick(e)}\n        />\n        <Checkbox\n          onClick={(e) => completeHandler(e)}\n          checked={task.completed === true ? true : false}\n        ></Checkbox>\n      </Col>\n    </div>\n  );\n};\n\nexport default Item;\n"]},"metadata":{},"sourceType":"module"}