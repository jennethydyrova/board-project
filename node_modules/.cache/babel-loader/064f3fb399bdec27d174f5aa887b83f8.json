{"ast":null,"code":"var _jsxFileName = \"/Users/dzennetahydyrova/board-project2/board-project/src/containers/boards/BoardsContainer.js\";\nimport React, { useState, useEffect } from \"react\";\nimport db from \"../../firebaseConfig\";\nimport Board from \"../../components/board/Board\";\nimport BoardForm from \"../../components/boardForm/BoardForm\";\nimport \"antd/dist/antd.css\";\nimport { Card, List, Switch, Menu, Dropdown, Row, Col } from \"antd\";\nimport { byTitle, byTitleD, byDate, byDateD } from \"../../functions\";\nimport SortBy from \"../../components/sortBy/SortBy\";\nimport ListView from \"../../components/listView\";\nimport BoardViewImg from \"./chess-board.svg\";\n\nconst BoardsContainer = () => {\n  const [boards, setBoards] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [sortedBy, setSortedBy] = useState(\"\");\n  const [listView, setListView] = useState(true);\n\n  const sortBoards = sortedBy => {\n    console.log(sortedBy);\n\n    switch (sortedBy) {\n      case \"2\":\n        setBoards(prevBoards => {\n          const newBoards = [...prevBoards];\n          let newBoard = newBoards.sort(byTitle);\n          return newBoard;\n        });\n        break;\n\n      case \"4\":\n        setBoards(prevBoards => {\n          const newBoards = [...prevBoards];\n          let newBoard = newBoards.sort(byTitleD);\n          return newBoard;\n        });\n        break;\n\n      case \"1\":\n        setBoards(prevBoards => {\n          const newBoards = [...prevBoards];\n          let newBoard = newBoards.sort(byDate);\n          return newBoard;\n        });\n        break;\n\n      case \"3\":\n        setBoards(prevBoards => {\n          const newBoards = [...prevBoards];\n          let newBoard = newBoards.sort(byDateD);\n          return newBoard;\n        });\n        break;\n\n      default:\n        setBoards(prevBoards => {\n          const newBoards = [...prevBoards];\n          let newBoard = newBoards.sort(byTitle);\n          return newBoard;\n        });\n    }\n  };\n\n  useEffect(() => {\n    return db.firestore().collection(\"boards\").onSnapshot(snapshot => {\n      if (snapshot.docChanges().length === 0) {\n        setIsLoading(false);\n      }\n\n      snapshot.docChanges().forEach(change => {\n        if (change.type === \"added\") {\n          setBoards(prevBoards => [...prevBoards, { ...change.doc.data(),\n            id: change.doc.id\n          }]);\n          setIsLoading(false);\n        }\n\n        if (change.type === \"modified\") {\n          setBoards(prevBoards => {\n            const newArrBoards = [...prevBoards];\n            let index = newArrBoards.findIndex(el => el.id === change.doc.id);\n\n            if (index !== -1) {\n              newArrBoards[index] = { ...change.doc.data(),\n                id: change.doc.id\n              };\n            }\n\n            return newArrBoards;\n          });\n          setIsLoading(false);\n        }\n\n        if (change.type === \"removed\") {\n          setBoards(prevBoards => {\n            const newArrBoards = [...prevBoards];\n            let index = newArrBoards.findIndex(el => el.id === change.doc.id);\n\n            if (index !== -1) {\n              newArrBoards.splice(index, 1);\n            }\n\n            return newArrBoards;\n          });\n        }\n      });\n    });\n  }, []);\n\n  const handleChange = () => {\n    setListView(!listView);\n  };\n\n  const gridStyle = {\n    margin: \"15px\",\n    width: \"30%\",\n    borderRadius: \"10px\"\n  };\n\n  const dropdownView = () => {\n    return /*#__PURE__*/React.createElement(Menu, {\n      onClick: e => handleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Menu.Item, {\n      key: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, \"Board\"), /*#__PURE__*/React.createElement(Menu.Item, {\n      key: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, \"List\"));\n  };\n\n  const boardViewStyle = {\n    width: \"15px\",\n    color: \"white\",\n    marginRight: \"1rem\"\n  };\n  const sortViewStyle = {\n    marginRight: \"2rem\" // marginLeft: '7px',\n\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"content-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BoardForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    style: {\n      marginTop: \"5rem\",\n      marginRight: \"0.2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, \"View\")), /*#__PURE__*/React.createElement(Col, {\n    style: {\n      marginTop: \"5rem\",\n      marginLeft: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    overlay: dropdownView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: BoardViewImg,\n    style: boardViewStyle,\n    onClick: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    style: {\n      marginTop: \"5rem\",\n      marginRight: \"3rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SortBy, {\n    sortBoards: sortBoards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, listView ? boards.map(el => {\n    return /*#__PURE__*/React.createElement(Card.Grid, {\n      style: gridStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      key: el.id,\n      boardTitle: el.title,\n      boardsItems: el.items ? el.items : [],\n      boardsId: el.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 19\n      }\n    }));\n  }) : boards.map(el => {\n    return /*#__PURE__*/React.createElement(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ListView, {\n      key: el.id,\n      boardTitle: el.title,\n      boardsItems: el.items ? el.items : [],\n      boardsId: el.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 19\n      }\n    }));\n  })));\n};\n\nexport default BoardsContainer;","map":{"version":3,"sources":["/Users/dzennetahydyrova/board-project2/board-project/src/containers/boards/BoardsContainer.js"],"names":["React","useState","useEffect","db","Board","BoardForm","Card","List","Switch","Menu","Dropdown","Row","Col","byTitle","byTitleD","byDate","byDateD","SortBy","ListView","BoardsContainer","boards","setBoards","isLoading","setIsLoading","sortedBy","setSortedBy","listView","setListView","sortBoards","console","log","prevBoards","newBoards","newBoard","sort","firestore","collection","onSnapshot","snapshot","docChanges","length","forEach","change","type","doc","data","id","newArrBoards","index","findIndex","el","splice","handleChange","gridStyle","margin","width","borderRadius","dropdownView","e","boardViewStyle","color","marginRight","sortViewStyle","marginTop","marginLeft","BoardViewImg","preventDefault","map","title","items"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport db from \"../../firebaseConfig\";\nimport Board from \"../../components/board/Board\";\nimport BoardForm from \"../../components/boardForm/BoardForm\";\nimport \"antd/dist/antd.css\";\nimport { Card, List, Switch, Menu, Dropdown, Row, Col } from \"antd\";\nimport { byTitle, byTitleD, byDate, byDateD } from \"../../functions\";\nimport SortBy from \"../../components/sortBy/SortBy\";\nimport ListView from \"../../components/listView\";\nimport BoardViewImg from \"./chess-board.svg\";\n\nconst BoardsContainer = () => {\n  const [boards, setBoards] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [sortedBy, setSortedBy] = useState(\"\");\n  const [listView, setListView] = useState(true);\n\n  const sortBoards = (sortedBy) => {\n    console.log(sortedBy);\n    switch (sortedBy) {\n      case \"2\":\n        setBoards((prevBoards) => {\n          const newBoards = [...prevBoards];\n          let newBoard = newBoards.sort(byTitle);\n          return newBoard;\n        });\n        break;\n      case \"4\":\n        setBoards((prevBoards) => {\n          const newBoards = [...prevBoards];\n          let newBoard = newBoards.sort(byTitleD);\n          return newBoard;\n        });\n        break;\n      case \"1\":\n        setBoards((prevBoards) => {\n          const newBoards = [...prevBoards];\n          let newBoard = newBoards.sort(byDate);\n          return newBoard;\n        });\n        break;\n      case \"3\":\n        setBoards((prevBoards) => {\n          const newBoards = [...prevBoards];\n          let newBoard = newBoards.sort(byDateD);\n          return newBoard;\n        });\n        break;\n      default:\n        setBoards((prevBoards) => {\n          const newBoards = [...prevBoards];\n          let newBoard = newBoards.sort(byTitle);\n          return newBoard;\n        });\n    }\n  };\n\n  useEffect(() => {\n    return db\n      .firestore()\n      .collection(\"boards\")\n      .onSnapshot((snapshot) => {\n        if (snapshot.docChanges().length === 0) {\n          setIsLoading(false);\n        }\n        snapshot.docChanges().forEach((change) => {\n          if (change.type === \"added\") {\n            setBoards((prevBoards) => [\n              ...prevBoards,\n              { ...change.doc.data(), id: change.doc.id },\n            ]);\n            setIsLoading(false);\n          }\n          if (change.type === \"modified\") {\n            setBoards((prevBoards) => {\n              const newArrBoards = [...prevBoards];\n              let index = newArrBoards.findIndex(\n                (el) => el.id === change.doc.id\n              );\n              if (index !== -1) {\n                newArrBoards[index] = {\n                  ...change.doc.data(),\n                  id: change.doc.id,\n                };\n              }\n              return newArrBoards;\n            });\n            setIsLoading(false);\n          }\n          if (change.type === \"removed\") {\n            setBoards((prevBoards) => {\n              const newArrBoards = [...prevBoards];\n              let index = newArrBoards.findIndex(\n                (el) => el.id === change.doc.id\n              );\n\n              if (index !== -1) {\n                newArrBoards.splice(index, 1);\n              }\n              return newArrBoards;\n            });\n          }\n        });\n      });\n  }, []);\n\n  const handleChange = () => {\n    setListView(!listView);\n  };\n\n  const gridStyle = {\n    margin: \"15px\",\n    width: \"30%\",\n    borderRadius: \"10px\",\n  };\n\n  const dropdownView = () => {\n    return (\n      <Menu onClick={(e) => handleChange(e)}>\n        <Menu.Item key=\"1\">Board</Menu.Item>\n        <Menu.Item key=\"2\">List</Menu.Item>\n      </Menu>\n    );\n  };\n  const boardViewStyle = {\n    width: \"15px\",\n    color: \"white\",\n    marginRight: \"1rem\",\n  };\n  const sortViewStyle = {\n    marginRight: \"2rem\",\n    // marginLeft: '7px',\n  };\n  return (\n    <div>\n      <Row className=\"content-header\">\n        <Col>\n          <BoardForm />\n        </Col>\n        <Row>\n          <Col style={{ marginTop: \"5rem\", marginRight: \"0.2rem\" }}>\n            <p>View</p>\n          </Col>\n          <Col\n            style={{\n              marginTop: \"5rem\",\n              marginLeft: \"0.5rem\",\n            }}\n          >\n            <Dropdown overlay={dropdownView}>\n              <img\n                src={BoardViewImg}\n                style={boardViewStyle}\n                onClick={(e) => e.preventDefault()}\n              />\n            </Dropdown>\n          </Col>\n\n          <Col style={{ marginTop: \"5rem\", marginRight: \"3rem\" }}>\n            <SortBy sortBoards={sortBoards} />\n          </Col>\n        </Row>\n      </Row>\n      <Row>\n        {listView\n          ? boards.map((el) => {\n              return (\n                <Card.Grid style={gridStyle}>\n                  <Board\n                    key={el.id}\n                    boardTitle={el.title}\n                    boardsItems={el.items ? el.items : []}\n                    boardsId={el.id}\n                  />\n                </Card.Grid>\n              );\n            })\n          : boards.map((el) => {\n              return (\n                <List.Item>\n                  <ListView\n                    key={el.id}\n                    boardTitle={el.title}\n                    boardsItems={el.items ? el.items : []}\n                    boardsId={el.id}\n                  />\n                </List.Item>\n              );\n            })}\n      </Row>\n    </div>\n  );\n};\n\nexport default BoardsContainer;\n"]},"metadata":{},"sourceType":"module"}