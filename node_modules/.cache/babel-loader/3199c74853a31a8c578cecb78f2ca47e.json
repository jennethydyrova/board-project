{"ast":null,"code":"var _jsxFileName = \"/Users/dzennetahydyrova/board-project2/board-project/src/components/completed/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport db from \"../../firebaseConfig\";\nimport Item from \"../item/Item\";\nimport ItemForm from \"../item/ItemForm\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport { Collapse } from \"antd\";\nimport Button from \"react-bootstrap/Button\";\nimport * as firebase from \"firebase/app\";\nimport { Card, Row, Col } from 'antd'; // import SortItemsBy from \"../../components/item/SortItemsBy\"\n// import {byTitle, byTitleD, byDeadline, byDeadlineD} from \"../../functions\"\n\nconst CompletedTasks = () => {\n  const [completedTaskList, setCompletedTaskList] = useState([]);\n  const {\n    Panel\n  } = Collapse;\n  const [modalOpened, setModalOpened] = useState({\n    modalOpen: false\n  });\n\n  const fetchCompletedTasks = async () => {\n    const res = await db.collection(\"boards\").get();\n    const data = res.docs;\n\n    for (let i = 0; i < data.length; i++) {\n      setCompletedTaskList(prevState => [...prevState, data[i].data()]); // console.log(data[i].data());\n    }\n\n    return completedTaskList;\n  };\n\n  useEffect(() => {\n    fetchCompletedTasks();\n  }, []);\n  console.log(completedTaskList); // const handleClick = (e) => {\n  //   db.collection(\"boards\")\n  //     .doc(boardsId)\n  //     .update({\n  //       items: firebase.firestore.FieldValue.arrayRemove(task),\n  //     });\n  // };\n\n  const handleModal = () => {\n    setModalOpened({\n      modalOpen: modalOpened.modalOpen === true ? false : true\n    });\n  }; // const handleEdit = (e) => {\n  //   e.preventDefault();\n  //   editItem();\n  //   setModalOpened({\n  //     modalOpen: modalOpened.modalOpen === true ? false : true,\n  //   });\n  // };\n  // const editItem = async () => {\n  //   const modifiedItems = boardsItems;\n  //   const itemIndex = modifiedItems.findIndex((item) => item.id === task.id);\n  //   modifiedItems[itemIndex] = userInput;\n  //   await db.collection(\"boards\").doc(boardsId).update({\n  //     items: modifiedItems,\n  //   });\n  // };\n  // const completeHandler = (e) => {\n  //   e.preventDefault()\n  //   completeStatus()\n  //   setShowResults(false)\n  //   }\n  //   const completeStatus = async() => {\n  //     const modifiedItems = [...boardsItems];\n  //     const itemIndex = modifiedItems.findIndex((item) => item.id === task.id);\n  //     modifiedItems[itemIndex].completed = !modifiedItems[itemIndex].completed;\n  //     await db.collection(\"boards\").doc(boardsId).update({\n  //       items: modifiedItems,\n  //     });\n  //   }\n\n\n  const gridStyle = {\n    width: '25%',\n    textAlign: 'center',\n    margin: '10px'\n  };\n  return completedTaskList.map(item => {\n    return /*#__PURE__*/React.createElement(Collapse, {\n      style: {\n        width: \"100%\"\n      },\n      defaultActiveKey: [\"1\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Panel, {\n      header: item.title,\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 2\n      }\n    }, item.items.map(el => {\n      return /*#__PURE__*/React.createElement(Card, {\n        title: el.title,\n        style: {\n          width: 300\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }\n      }, \"Assigner: \", el.assigner), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }\n      }, \"Assignee: \", el.assignee), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }\n      }, \"Due date: \", el.due));\n    })));\n  });\n};\n\nexport default CompletedTasks;","map":{"version":3,"sources":["/Users/dzennetahydyrova/board-project2/board-project/src/components/completed/index.js"],"names":["React","useState","useEffect","db","Item","ItemForm","DeleteOutlined","Collapse","Button","firebase","Card","Row","Col","CompletedTasks","completedTaskList","setCompletedTaskList","Panel","modalOpened","setModalOpened","modalOpen","fetchCompletedTasks","res","collection","get","data","docs","i","length","prevState","console","log","handleModal","gridStyle","width","textAlign","margin","map","item","title","id","items","el","assigner","assignee","due"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport db from \"../../firebaseConfig\";\nimport Item from \"../item/Item\";\nimport ItemForm from \"../item/ItemForm\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport { Collapse } from \"antd\";\nimport Button from \"react-bootstrap/Button\";\nimport * as firebase from \"firebase/app\";\nimport { Card, Row, Col } from 'antd';\n// import SortItemsBy from \"../../components/item/SortItemsBy\"\n// import {byTitle, byTitleD, byDeadline, byDeadlineD} from \"../../functions\"\n\nconst CompletedTasks = () => {\n const [completedTaskList, setCompletedTaskList] = useState([])\n const { Panel } = Collapse;\n const [modalOpened, setModalOpened] = useState({ modalOpen: false });\n\n  const fetchCompletedTasks = async() => {\n    const res = await db.collection(\"boards\").get();\n    const data = res.docs;\n    for (let i = 0; i < data.length; i++) {\n      setCompletedTaskList((prevState) => [...prevState, data[i].data()]);\n      // console.log(data[i].data());\n    }\n    return completedTaskList\n  }\n useEffect(() => {\n  fetchCompletedTasks()\n }, [])\n\nconsole.log(completedTaskList)\n// const handleClick = (e) => {\n//   db.collection(\"boards\")\n//     .doc(boardsId)\n//     .update({\n//       items: firebase.firestore.FieldValue.arrayRemove(task),\n//     });\n// };\n\nconst handleModal = () => {\n  setModalOpened({\n    modalOpen: modalOpened.modalOpen === true ? false : true,\n  });\n};\n\n// const handleEdit = (e) => {\n//   e.preventDefault();\n//   editItem();\n//   setModalOpened({\n//     modalOpen: modalOpened.modalOpen === true ? false : true,\n//   });\n// };\n// const editItem = async () => {\n//   const modifiedItems = boardsItems;\n//   const itemIndex = modifiedItems.findIndex((item) => item.id === task.id);\n//   modifiedItems[itemIndex] = userInput;\n//   await db.collection(\"boards\").doc(boardsId).update({\n//     items: modifiedItems,\n//   });\n// };\n\n// const completeHandler = (e) => {\n//   e.preventDefault()\n//   completeStatus()\n//   setShowResults(false)\n//   }\n  \n//   const completeStatus = async() => {\n//     const modifiedItems = [...boardsItems];\n//     const itemIndex = modifiedItems.findIndex((item) => item.id === task.id);\n//     modifiedItems[itemIndex].completed = !modifiedItems[itemIndex].completed;\n//     await db.collection(\"boards\").doc(boardsId).update({\n//       items: modifiedItems,\n//     });\n  \n//   }\n\nconst gridStyle = {\n  width: '25%',\n  textAlign: 'center',\n  margin: '10px'\n};\n  \n  return (\ncompletedTaskList.map((item) => {\n  return (\n    <Collapse style={{ width: \"100%\" }} defaultActiveKey={[\"1\"]}>\n <Panel header={item.title} key={item.id}>\n{item.items.map((el) => {\n  return (\n\n        <Card title={el.title} style={{ width: 300 }}>\n          <p>Assigner: {el.assigner}</p>\n          <p>Assignee: {el.assignee}</p>\n          <p>Due date: {el.due}</p>\n          {/* <Button\n          variant=\"outline-info\"\n          type=\"submit\"\n          size=\"sm\"\n          onClick={(e) => handleModal(e)}\n          >\n            Edit\n          </Button>\n          <DeleteOutlined\n            style={{ cursor: \"pointer\" }}\n            onClick={(e) => handleClick(e)}\n          /> */}\n          \n        </Card>\n\n  )\n})}\n</Panel>\n</Collapse>\n  )\n})\n  );\n};\n\n\n\n\n\n\n\nexport default CompletedTasks;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}