{"version":3,"sources":["components/sortBy/sort.svg","containers/boards/chess-board.svg","firebaseConfig.js","components/EditForm/EditForm.js","components/item/Item.js","components/item/ItemForm.js","components/item/SortItemsBy.js","functions.js","containers/items/Items.js","components/board/Board.js","components/boardForm/BoardForm.js","components/sortBy/SortBy.js","components/listView/index.js","containers/boards/BoardsContainer.js","components/about/index.js","components/completed/index.js","components/login/index.js","components/header/index.js","components/navbar/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","EditForm","boardsItems","modalOpened","setModalOpened","task","boardsId","useState","editedTask","setEditedTask","currentDate","Date","setDate","getDate","defaultDate","toISOString","substr","title","due","assigner","assignee","id","completed","userInput","setUserInput","editItem","a","itemIndex","modifiedItems","findIndex","item","db","firestore","collection","doc","update","items","useEffect","className","isOpen","modalOpen","direction","align","style","marginTop","marginLeft","marginRight","name","value","placeholder","onChange","e","target","handleInputValue","addonBefore","message","info","format","toDate","defaultValue","moment","color","handleAssignerChange","handleAssigneeChange","variant","type","size","onClick","preventDefault","handleEdit","Item","React","showResults","setShowResults","Panel","Collapse","completeStatus","display","flexDirection","justifyContent","defaultActiveKey","header","key","DeleteOutlined","cursor","FieldValue","arrayRemove","completeHandler","checked","ItemForm","setItems","itemId","addItem","handleSubmit","onSubmit","width","SortItemsBy","sortItems","overlay","handleClick","src","sortImg","alt","byTitle","b","byTitleD","byDeadline","byDeadlineD","byDate","date","byDateD","ItemsContainer","boardTitle","notCompletedItems","filter","sortedBy","prevItems","sort","map","Board","editing","setEditing","Title","Typography","editTitle","newTitle","theTitle","level","span","offset","EditOutlined","editingTitle","onKeyDown","handleEnter","handleChange","onBlur","cardTitle","bordered","borderRadius","Items","delete","BoardForm","newBoard","setNewBoard","addBoard","stringDate","add","boarder","height","PlusOutlined","SortBy","sortBoards","ListView","console","log","BoardsContainer","boards","setBoards","listView","setListView","onSnapshot","snapshot","docChanges","length","forEach","change","prevBoards","data","newArrBoards","index","el","splice","gridStyle","margin","BoardViewImg","Grid","About","Paragraph","pageTitle","jennet","href","majd","recoded","fontSize","CompletedTasks","completedTaskList","setCompletedTaskList","fetchCompletedTasks","get","res","docs","i","prevState","textAlign","require","Login","password","setPassword","email","setEmail","setError","setCurrentUser","history","useHistory","tailLayout","wrapperCol","auth","onAuthStateChanged","labelCol","initialValues","remember","label","handleEmail","rules","required","handlePassword","htmlType","signInWithEmailAndPassword","then","setTimeout","push","alert","catch","error","createUserWithEmailAndPassword","Header","signOut","Sider","theme","current","setTheme","backgroundColor","defaultOpenKeys","selectedKeys","mode","icon","HomeOutlined","to","QuestionCircleOutlined","CheckOutlined","Layout","Content","App","currentUser","user","collapsible","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.68124a55.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sort.a9cf2b4f.svg\";","module.exports = __webpack_public_path__ + \"static/media/chess-board.d9ac444b.svg\";","import * as firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDPm7N98x0F_B9Bt9W5p3W2wn45USgbqmw\",\n  authDomain: \"board-project-527e2.firebaseapp.com\",\n  databaseURL: \"https://board-project-527e2.firebaseio.com\",\n  projectId: \"board-project-527e2\",\n  storageBucket: \"board-project-527e2.appspot.com\",\n  messagingSenderId: \"746894809838\",\n  appId: \"1:746894809838:web:49082c8d855197e54831ff\",\n  measurementId: \"G-WGQV7ZTX6R\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n// firebase.analytics();\n\nexport default firebase;\n","import React, { useState, useEffect } from \"react\";\nimport \"antd/dist/antd.css\";\nimport db from \"../../firebaseConfig\";\nimport Modal from \"react-modal\";\nimport { DatePicker, message } from \"antd\";\nimport { Space, Button, Form, Input } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"moment/locale/zh-cn\";\nimport moment from \"moment\";\n\nconst EditForm = ({\n  boardsItems,\n  modalOpened,\n  setModalOpened,\n  task,\n  boardsId,\n}) => {\n  const [editedTask, setEditedTask] = useState(task);\n  const currentDate = new Date();\n  currentDate.setDate(currentDate.getDate() + 1);\n  const defaultDate = currentDate.toISOString().substr(0, 10);\n\n  const [userInput, setUserInput] = useState({\n    title: task.title,\n    due: task.due,\n    assigner: task.assigner,\n    assignee: task.assignee,\n    id: task.id,\n    completed: task.completed,\n  });\n\n  const editItem = async () => {\n    const modifiedItems = boardsItems;\n    const itemIndex = modifiedItems.findIndex((item) => item.id === task.id);\n    modifiedItems[itemIndex] = userInput;\n\n    await db.firestore().collection(\"boards\").doc(boardsId).update({\n      items: modifiedItems,\n    });\n  };\n\n  useEffect(() => {\n    setEditedTask(userInput);\n  }, [userInput]);\n\n  const handleInputValue = (e) => {\n    setUserInput({ ...userInput, title: e.target.value, id: task.id });\n  };\n\n  const formStyle = {\n    marginTop: \"10px\",\n    marginLeft: \"10px\",\n    marginRight: \"10px\",\n  };\n\n  const handleModal = () => {\n    setModalOpened({\n      modalOpen: modalOpened.modalOpen === true ? false : true,\n    });\n  };\n\n  const handleEdit = (e) => {\n    e.preventDefault();\n    editItem(editedTask);\n    setModalOpened({\n      modalOpen: modalOpened.modalOpen === true ? false : true,\n    });\n  };\n\n  const handleDueChange = (value) => {\n    message.info(\n      `Selected Date: ${value ? value.format(\"YYYY-MM-DD\") : \"None\"}`\n    );\n    setUserInput({\n      ...userInput,\n      due: value.toDate().toISOString().substr(0, 10),\n    });\n  };\n\n  const handleAssignerChange = (e) => {\n    setUserInput({ ...userInput, assigner: e.target.value });\n  };\n\n  const handleAssigneeChange = (e) => {\n    setUserInput({ ...userInput, assignee: e.target.value });\n  };\n\n  return (\n    <Modal className=\"modal\" isOpen={modalOpened.modalOpen}>\n      <Space direction=\"vertical\" align=\"center\">\n        <Form style={formStyle}>\n          <Input\n            name=\"items\"\n            value={userInput.title}\n            className=\"task-title input-field item-input\"\n            placeholder=\"Task title\"\n            onChange={(e) => handleInputValue(e)}\n            addonBefore=\"Title\"\n          />\n          <DatePicker\n            onChange={(e) => handleDueChange(e)}\n            defaultValue={moment(defaultDate)}\n            style={{ color: \"white\" }}\n            className=\"form-btn\"\n            addonBefore=\"Due date\"\n          />\n          <Input\n            name=\"assigner\"\n            value={userInput.assigner}\n            placeholder=\"Assigner\"\n            onChange={(e) => handleAssignerChange(e)}\n            className=\"input-field item-input\"\n            addonBefore=\"Assigner\"\n          />\n          <Input\n            name=\"assignee\"\n            value={userInput.assignee}\n            placeholder=\"Assignee\"\n            onChange={(e) => handleAssigneeChange(e)}\n            className=\"input-field item-input\"\n            addonBefore=\"Assignee\"\n          />\n          <Button\n            variant=\"outline-info\"\n            type=\"submit\"\n            size=\"sm\"\n            onClick={(e) => handleEdit(e)}\n            className=\"form-btn\"\n          >\n            Edit task\n          </Button>\n        </Form>\n        <Button className=\"form-btn\" onClick={(e) => handleModal(e)}>\n          Close form\n        </Button>\n      </Space>\n    </Modal>\n  );\n};\n\nexport default EditForm;\n","import React, { useState, useEffect } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport { Collapse } from \"antd\";\nimport db from \"../../firebaseConfig\";\nimport { Checkbox, Button, Col } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"moment/locale/zh-cn\";\nimport EditForm from \"../EditForm/EditForm\";\n\nconst Item = ({ task, boardsId, boardsItems }) => {\n  const currentDate = new Date();\n  currentDate.setDate(currentDate.getDate() + 1);\n\n  const [showResults, setShowResults] = React.useState(true);\n  const [userInput, setUserInput] = useState({\n    title: task.title,\n    due: task.due,\n    assigner: task.assigner,\n    assignee: task.assignee,\n    id: task.id,\n    completed: task.completed,\n  });\n\n  const { Panel } = Collapse;\n  const [modalOpened, setModalOpened] = useState({ modalOpen: false });\n  const [editedTask, setEditedTask] = useState(task);\n\n  const style = {\n    items: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n    },\n  };\n\n  const handleClick = (e) => {\n    db.firestore()\n      .collection(\"boards\")\n      .doc(boardsId)\n      .update({\n        items: db.firestore.FieldValue.arrayRemove(task),\n      });\n  };\n\n  useEffect(() => {\n    setEditedTask(userInput);\n    setUserInput(\"\");\n  }, [userInput]);\n\n  const handleModal = () => {\n    setModalOpened({\n      modalOpen: modalOpened.modalOpen === true ? false : true,\n    });\n  };\n\n  const completeHandler = (e) => {\n    e.preventDefault();\n    completeStatus();\n    setShowResults(false);\n  };\n\n  const completeStatus = async () => {\n    const modifiedItems = [...boardsItems];\n    const itemIndex = modifiedItems.findIndex((item) => item.id === task.id);\n    modifiedItems[itemIndex].completed = !modifiedItems[itemIndex].completed;\n    await db.firestore().collection(\"boards\").doc(boardsId).update({\n      items: modifiedItems,\n    });\n  };\n\n  return (\n    <div style={style.items}>\n      <Collapse className=\"item-title\" defaultActiveKey={[\"1\"]}>\n        <Panel header={task.title} key={task.id}>\n          <p className=\"item-element\">Assigner: {task.assigner}</p>\n          <p className=\"item-element\">Assignee: {task.assignee}</p>\n          <p className=\"item-element\">Due date: {task.due}</p>\n          <Button\n            variant=\"outline-info\"\n            type=\"submit\"\n            size=\"sm\"\n            onClick={(e) => handleModal(e)}\n            className=\"form-btn\"\n          >\n            Edit\n          </Button>\n          <EditForm\n            showResults={showResults}\n            task={task}\n            boardsId={boardsId}\n            boardsItems={boardsItems}\n            modalOpened={modalOpened}\n            editedTask={editedTask}\n            setModalOpened={setModalOpened}\n          />\n        </Panel>\n      </Collapse>\n      <Col style={{ marginLeft: \"1rem\" }}>\n        <DeleteOutlined\n          style={{ cursor: \"pointer\" }}\n          onClick={(e) => handleClick(e)}\n        />\n        <Checkbox\n          onClick={(e) => completeHandler(e)}\n          checked={task.completed === true ? true : false}\n        ></Checkbox>\n      </Col>\n    </div>\n  );\n};\n\nexport default Item;\n","import React, { useState, useEffect } from \"react\";\nimport db from \"../../firebaseConfig\";\nimport { DatePicker, message, Button, Form, Input } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"moment/locale/zh-cn\";\nimport moment from \"moment\";\n\nconst ItemForm = ({ boardsItems, boardsId }) => {\n  const currentDate = new Date();\n  currentDate.setDate(currentDate.getDate());\n  const defaultDate = currentDate.toISOString().substr(0, 10);\n\n  const [items, setItems] = useState(boardsItems);\n  const [userInput, setUserInput] = useState({\n    title: \"\",\n    due: defaultDate,\n    assigner: \"\",\n    assignee: \"\",\n    id: \"\",\n    completed: false,\n  });\n\n  const itemId = db.firestore().collection(\"boards\").doc().id;\n\n  useEffect(() => {\n    setItems(boardsItems);\n  }, [boardsItems]);\n\n  const addItem = async () => {\n    await db\n      .firestore()\n      .collection(\"boards\")\n      .doc(boardsId)\n      .update({\n        items: [...items, userInput],\n      });\n    setItems([...items, userInput]);\n  };\n\n  const handleInputValue = (e) => {\n    setUserInput({ ...userInput, title: e.target.value, id: itemId });\n  };\n\n  const handleDueChange = (value) => {\n    message.info(\n      `Selected Date: ${value ? value.format(\"YYYY-MM-DD\") : \"None\"}`\n    );\n\n    setUserInput({\n      ...userInput,\n      due: value === null ? value : value.format(\"YYYY-MM-DD\"),\n    });\n  };\n\n  const handleAssignerChange = (e) => {\n    setUserInput({ ...userInput, assigner: e.target.value });\n  };\n\n  const handleAssigneeChange = (e) => {\n    setUserInput({ ...userInput, assignee: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addItem();\n    setUserInput({\n      title: \"\",\n      id: \"\",\n      due: defaultDate,\n      assignee: \"\",\n      assigner: \"\",\n      completed: false,\n    });\n  };\n\n  const formStyle = {\n    marginTop: \"10px\",\n  };\n\n  return (\n    <div>\n      <Form onSubmit={(e) => handleSubmit(e)}>\n        <Input\n          name=\"items\"\n          onChange={(e) => handleInputValue(e)}\n          value={userInput.title}\n          style={{ width: \"85%\", marginTop: \"0.5rem\" }}\n          className=\"input-field item-input\"\n          placeholder=\"Task title\"\n        />\n        <DatePicker\n          style={{ width: \"85%\", marginTop: \"0.5rem\" }}\n          onChange={(e) => handleDueChange(e)}\n          value={userInput.due === null ? \"\" : moment(userInput.due)}\n          className=\"form-btn\"\n        />\n        <Input\n          name=\"assigner\"\n          style={{ width: \"85%\", marginTop: \"0.5rem\" }}\n          onChange={(e) => handleAssignerChange(e)}\n          value={userInput.assigner}\n          className=\"input-field item-input\"\n          placeholder=\"Assigner\"\n        />\n        <Input\n          name=\"assignee\"\n          style={{ width: \"85%\", marginTop: \"0.5rem\" }}\n          onChange={(e) => handleAssigneeChange(e)}\n          value={userInput.assignee}\n          className=\"input-field item-input\"\n          placeholder=\"Assignee\"\n        />\n        <Button\n          variant=\"outline-info\"\n          type=\"submit\"\n          size=\"sm\"\n          onClick={(e) => handleSubmit(e)}\n          className=\"form-btn\"\n          style={formStyle}\n        >\n          Add item\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default ItemForm;\n","import React from \"react\";\nimport { Menu, Dropdown, Row, Col } from \"antd\";\nimport sortImg from \"../sortBy/sort.svg\";\n\nexport default function SortItemsBy({ sortItems }) {\n  const handleClick = (e) => {\n    sortItems(e.key);\n  };\n\n  const dropdownSort = () => {\n    return (\n      <Menu onClick={(e) => handleClick(e)}>\n        <Menu.Item key=\"1\" value=\"date\">\n          Due\n        </Menu.Item>\n        <Menu.Item key=\"2\" value=\"title\">\n          Title\n        </Menu.Item>\n        <Menu.Item key=\"3\" value=\"dDate\">\n          Due (descending)\n        </Menu.Item>\n        <Menu.Item key=\"4\" value=\"dTitle\">\n          Title (descending)\n        </Menu.Item>\n      </Menu>\n    );\n  };\n\n  const styleSortImg = {\n    width: \"25px\",\n    color: \"white\",\n  };\n\n  return (\n    <>\n      <Row>\n        <Col>\n          <p>Sort</p>\n        </Col>\n        <Col>\n          <Dropdown overlay={dropdownSort}>\n            <img\n              src={sortImg}\n              style={styleSortImg}\n              onClick={(e) => e.preventDefault()}\n              alt=\"Sort Icon\"\n            ></img>\n          </Dropdown>\n        </Col>\n      </Row>\n    </>\n  );\n}\n","export function byTitle( a, b ) {\n    if ( a.title < b.title ){\n      return -1;\n    }\n    if ( a.title > b.title){\n      return 1;\n    }\n    return 0;\n  }\n  \nexport function byTitleD( a, b ) {\nif ( a.title < b.title ){\n    return 1;\n}\nif ( a.title > b.title){\n    return -1;\n}\nreturn 0;\n}\n\nexport function byDeadline( a, b ) {\nif ( a.due < b.due ){\n    return -1;\n}\nif ( a.due > b.due){\n    return 1;\n}\nreturn 0;\n}\n\nexport function byDeadlineD( a, b ) {\nif ( a.due < b.due ){\n    return 1;\n}\nif ( a.due > b.due){\n    return -1;\n}\nreturn 0;\n}\n\nexport function byDate( a, b ) {\n    if ( a.date < b.date ){\n      return -1;\n    }\n    if ( a.date > b.date){\n      return 1;\n    }\n    return 0;\n  }\n  \nexport function byDateD( a, b ) {\n    if ( a.date < b.date ){\n      return 1;\n    }\n    if ( a.date > b.date){\n      return -1;\n    }\n    return 0;\n  }","import React, { useState, useEffect } from \"react\";\nimport Item from \"../../components/item/Item\";\nimport ItemForm from \"../../components/item/ItemForm\";\nimport SortItemsBy from \"../../components/item/SortItemsBy\"\nimport {byTitle, byTitleD, byDeadline, byDeadlineD} from \"../../functions\"\n\nconst ItemsContainer = ({ boardsItems, boardTitle, boardsId }) => {\n  const [items, setItems] = useState(boardsItems);\n\n  const sortItems = (sortedBy) => {\n    switch(sortedBy){\n      case \"2\":\n          setItems((prevItems) => {\n            let newItems = [...prevItems]\n            let newItem = newItems.sort(byTitle)\n            return newItem\n          })\n          break\n      case \"4\":\n          setItems((prevItems) => {\n            let newItems = [...prevItems]\n            let newItem = newItems.sort(byTitleD)\n            return newItem\n          })\n          break\n      case \"1\":\n          setItems((prevItems) => {\n            let newItems = [...prevItems]\n            let newItem = newItems.sort(byDeadline)\n            return newItem\n          })\n          break\n      case \"3\":\n          setItems((prevItems) => {\n            let newItems = [...prevItems]\n            let newItem = newItems.sort(byDeadlineD)\n            return newItem\n          })\n          break\n      default:\n          setItems((prevItems) => {\n            let newItems = [...prevItems]\n            let newItem = newItems.sort(byTitle)\n            return newItem\n          })\n    }\n\n  }\n\n  useEffect(()=> {\n    setItems(boardsItems)\n  },[boardsItems])\n\n  const notCompletedItems = items.filter((item) => item.completed === false)\n \n  return (\n    <>\n      <SortItemsBy sortItems={sortItems} />\n      <div>\n        {notCompletedItems.map((item) => {\n          return <Item key={item.id} task={item} boardsId={boardsId} \n          boardsItems={boardsItems} setItems={setItems}/>;\n        })}\n      </div>\n      <div>\n        <ItemForm\n          boardTitle={boardTitle}\n          boardsItems={boardsItems}\n          boardsId={boardsId}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default ItemsContainer;\n\n","import React, { useState } from \"react\";\nimport Items from \"../../containers/items/Items\";\nimport db from \"../../firebaseConfig\";\nimport { Card, Col, Row, Button, Typography, Input } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\n\nconst Board = ({ boardTitle, boardsItems, boardsId }) => {\n  const [editing, setEditing] = useState(false);\n  const [userInput, setUserInput] = useState(\"\");\n  const { Title } = Typography;\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    db.firestore().collection(\"boards\").doc(boardsId).delete();\n  };\n\n  const handleEdit = () => {\n    setEditing(true);\n  };\n\n  const handleEnter = (e) => {\n    if (e.key === \"Enter\") {\n      setEditing(false);\n      editTitle();\n      setUserInput(\"\");\n    } else if (e.key === \"Escape\") {\n      setUserInput(\"\");\n      setEditing(false);\n    }\n  };\n\n  const handleBlur = () => {\n    setUserInput(\"\");\n    setEditing(false);\n  };\n\n  const handleChange = (e) => {\n    setUserInput(e.target.value);\n  };\n\n  const editTitle = async () => {\n    const newTitle = userInput;\n    await db.firestore().collection(\"boards\").doc(boardsId).update({\n      title: newTitle,\n    });\n  };\n\n  const theTitle = (\n    <Title style={{ color: \"white\" }} level={2}>\n      <Row>\n        <Col span={10}>{boardTitle}</Col>\n        <Col span={2} offset={10}>\n          <Button className=\"form-btn\" onClick={handleEdit}>\n            <EditOutlined />\n          </Button>\n        </Col>\n      </Row>\n    </Title>\n  );\n  const editingTitle = (\n    <Title style={{ color: \"white\" }} level={2}>\n      <Input\n        placeholder=\"Enter new title name (Esc to cancel)\"\n        className=\"input-field\"\n        onKeyDown={(e) => handleEnter(e)}\n        onChange={(e) => handleChange(e)}\n        onBlur={handleBlur}\n      />\n    </Title>\n  );\n\n  const cardTitle = editing ? editingTitle : theTitle;\n\n  return (\n    <Card\n      title={cardTitle}\n      bordered={false}\n      style={{ borderRadius: \"10px\" }}\n      className=\"card\"\n    >\n      <Items\n        boardTitle={boardTitle}\n        boardsId={boardsId}\n        boardsItems={boardsItems}\n      />\n      <Button\n        variant=\"outline-info\"\n        style={{ marginTop: \"10px\" }}\n        type=\"submit\"\n        size=\"sm\"\n        onClick={(e) => handleClick(e)}\n        className=\"form-btn\"\n      >\n        Delete Board\n      </Button>\n    </Card>\n  );\n};\n\nexport default Board;\n","import React, { useState } from \"react\";\nimport db from \"../../firebaseConfig\";\nimport \"antd/dist/antd.css\";\nimport { Card,  Button, Form, Input } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nconst BoardForm = () => {\n  const [newBoard, setNewBoard] = useState({\n    title: \"\",\n  });\n\n\n  const addBoard = async () => {\n    const date = new Date();\n    const stringDate = date.toISOString();\n    await db.firestore().collection(\"boards\").add({\n      title: newBoard.title,\n      items: [],\n      date: stringDate,\n    });\n  }\n  const handleInputValue = (e) => {\n    setNewBoard({ ...newBoard, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addBoard();\n    setNewBoard({\n      title: \"\",\n    });\n  };\n\n  return (\n    <Card\n      boarder=\"info\"\n      style={{ width: \"18rem\", height: \"100%\", marginLeft: \"20px\" }}\n      className=\"card\"\n    >\n      <Form\n        onSubmit={(e) => handleSubmit(e)}\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        <Form.Item>\n          <Input\n            type=\"text\"\n            placeholder=\"Enter board name\"\n            name=\"title\"\n            value={newBoard.title}\n            className=\"input-field\"\n            onChange={(e) => handleInputValue(e)}\n          />\n        </Form.Item>\n\n        <Button\n          variant=\"outline-info\"\n          type=\"submit\"\n          size=\"lg\"\n          onClick={(e) => handleSubmit(e)}\n          style={{ width: \"60%\" }}\n          className=\"board-btn\"\n        >\n          <PlusOutlined /> Add board\n        </Button>\n      </Form>\n    </Card>\n  );\n};\n\nexport default BoardForm\n","import React from \"react\";\nimport { Menu, Dropdown, Row, Col } from \"antd\";\nimport sortImg from \"./sort.svg\";\n\nexport default function SortBy({ sortBoards }) {\n  const handleClick = (e) => {\n    sortBoards(e.key);\n  };\n\n  const dropdownSort = () => {\n    return (\n      <Menu onClick={(e) => handleClick(e)}>\n        <Menu.Item key=\"1\" value=\"date\">\n          Date\n        </Menu.Item>\n        <Menu.Item key=\"2\" value=\"title\">\n          Title\n        </Menu.Item>\n        <Menu.Item key=\"3\" value=\"dDate\">\n          Date (descending)\n        </Menu.Item>\n        <Menu.Item key=\"4\" value=\"dTitle\">\n          Title (descending)\n        </Menu.Item>\n      </Menu>\n    );\n  };\n\n  const styleSortImg = {\n    width: \"25px\",\n    color: \"white\",\n  };\n\n  return (\n    <>\n      <Row>\n        <Col>\n          <p>Sort</p>\n        </Col>\n        <Col>\n          <Dropdown overlay={dropdownSort}>\n            <img\n              src={sortImg}\n              style={styleSortImg}\n              onClick={(e) => e.preventDefault()}\n              alt=\"Sort Icon\"\n            ></img>\n          </Dropdown>\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport Items from \"../../containers/items/Items\";\nimport db from \"../../firebaseConfig\";\nimport { Card, Col, Row, Button, Typography, Input } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\n\nconst ListView = ({ boardTitle, boardsItems, boardsId }) => {\n  const [editing, setEditing] = useState(false);\n  const [userInput, setUserInput] = useState(\"\");\n  const { Title } = Typography;\n  const handleClick = (e) => {\n    e.preventDefault();\n    db.firestore().collection(\"boards\").doc(boardsId).delete();\n  };\n\n  const handleEdit = () => {\n    setEditing(true);\n  };\n\n  const handleEnter = (e) => {\n    console.log(e.key);\n    if (e.key === \"Enter\") {\n      setEditing(false);\n      editTitle();\n      setUserInput(\"\");\n    } else if (e.key === \"Escape\") {\n      setUserInput(\"\");\n      setEditing(false);\n    }\n  };\n\n  const handleBlur = () => {\n    setUserInput(\"\");\n    setEditing(false);\n  };\n\n  const handleChange = (e) => {\n    setUserInput(e.target.value);\n  };\n\n  const editTitle = async () => {\n    const newTitle = userInput;\n    await db.firestore().collection(\"boards\").doc(boardsId).update({\n      title: newTitle,\n    });\n  };\n\n  const theTitle = (\n    <Title style={{ color: \"white\" }} level={2}>\n      <Row>\n        <Col span={10}>{boardTitle}</Col>\n        <Col span={2} offset={10}>\n          <Button className=\"form-btn\" onClick={handleEdit}>\n            <EditOutlined />\n          </Button>\n        </Col>\n      </Row>\n    </Title>\n  );\n  const editingTitle = (\n    <Title style={{ color: \"white\" }} level={2}>\n      <Input\n        placeholder=\"Enter new title name (Esc to cancel)\"\n        className=\"input-field\"\n        onKeyDown={(e) => handleEnter(e)}\n        onChange={(e) => handleChange(e)}\n        onBlur={handleBlur}\n      />\n    </Title>\n  );\n\n  const cardTitle = editing ? editingTitle : theTitle;\n\n  return (\n    <Card\n      title={cardTitle}\n      bordered={false}\n      style={{ borderRadius: \"10px\" }}\n      className=\"card\"\n    >\n      <Items\n        boardTitle={boardTitle}\n        boardsId={boardsId}\n        boardsItems={boardsItems}\n      />\n      <Button\n        variant=\"outline-info\"\n        type=\"submit\"\n        size=\"sm\"\n        onClick={(e) => handleClick(e)}\n      >\n        Delete Board\n      </Button>\n    </Card>\n  );\n};\n\nexport default ListView;\n","import React, { useState, useEffect } from \"react\";\nimport db from \"../../firebaseConfig\";\nimport Board from \"../../components/board/Board\";\nimport BoardForm from \"../../components/boardForm/BoardForm\";\nimport \"antd/dist/antd.css\";\nimport { Card, List, Menu, Dropdown, Row, Col } from \"antd\";\nimport { byTitle, byTitleD, byDate, byDateD } from \"../../functions\";\nimport SortBy from \"../../components/sortBy/SortBy\";\nimport ListView from \"../../components/listView\";\nimport BoardViewImg from \"./chess-board.svg\";\n\nconst BoardsContainer = () => {\n  const [boards, setBoards] = useState([]);\n  const [listView, setListView] = useState(true);\n\n  const sortBoards = (sortedBy) => {\n    switch (sortedBy) {\n      case \"2\":\n        setBoards((prevBoards) => {\n          const newBoards = [...prevBoards];\n          let newBoard = newBoards.sort(byTitle);\n          return newBoard;\n        });\n        break;\n      case \"4\":\n        setBoards((prevBoards) => {\n          const newBoards = [...prevBoards];\n          let newBoard = newBoards.sort(byTitleD);\n          return newBoard;\n        });\n        break;\n      case \"1\":\n        setBoards((prevBoards) => {\n          const newBoards = [...prevBoards];\n          let newBoard = newBoards.sort(byDate);\n          return newBoard;\n        });\n        break;\n      case \"3\":\n        setBoards((prevBoards) => {\n          const newBoards = [...prevBoards];\n          let newBoard = newBoards.sort(byDateD);\n          return newBoard;\n        });\n        break;\n      default:\n        setBoards((prevBoards) => {\n          const newBoards = [...prevBoards];\n          let newBoard = newBoards.sort(byTitle);\n          return newBoard;\n        });\n    }\n  };\n\n  useEffect(() => {\n    return db\n      .firestore()\n      .collection(\"boards\")\n      .onSnapshot((snapshot) => {\n        if (snapshot.docChanges().length === 0) {\n        }\n        snapshot.docChanges().forEach((change) => {\n          if (change.type === \"added\") {\n            setBoards((prevBoards) => [\n              ...prevBoards,\n              { ...change.doc.data(), id: change.doc.id },\n            ]);\n          }\n          if (change.type === \"modified\") {\n            setBoards((prevBoards) => {\n              const newArrBoards = [...prevBoards];\n              let index = newArrBoards.findIndex(\n                (el) => el.id === change.doc.id\n              );\n              if (index !== -1) {\n                newArrBoards[index] = {\n                  ...change.doc.data(),\n                  id: change.doc.id,\n                };\n              }\n              return newArrBoards;\n            });\n          }\n          if (change.type === \"removed\") {\n            setBoards((prevBoards) => {\n              const newArrBoards = [...prevBoards];\n              let index = newArrBoards.findIndex(\n                (el) => el.id === change.doc.id\n              );\n\n              if (index !== -1) {\n                newArrBoards.splice(index, 1);\n              }\n              return newArrBoards;\n            });\n          }\n        });\n      });\n  }, []);\n\n  const handleChange = () => {\n    setListView(!listView);\n  };\n\n  const gridStyle = {\n    margin: \"15px\",\n    width: \"30%\",\n    borderRadius: \"10px\",\n  };\n\n  const dropdownView = () => {\n    return (\n      <Menu onClick={(e) => handleChange(e)}>\n        <Menu.Item key=\"1\">Board</Menu.Item>\n        <Menu.Item key=\"2\">List</Menu.Item>\n      </Menu>\n    );\n  };\n  const boardViewStyle = {\n    width: \"15px\",\n    color: \"white\",\n    marginRight: \"1rem\",\n  };\n\n  return (\n    <div>\n      <Row className=\"content-header\">\n        <Col>\n          <BoardForm />\n        </Col>\n        <Row>\n          <Col style={{ marginTop: \"5rem\", marginRight: \"0.2rem\" }}>\n            <p>View</p>\n          </Col>\n          <Col\n            style={{\n              marginTop: \"5rem\",\n              marginLeft: \"0.5rem\",\n            }}\n          >\n            <Dropdown overlay={dropdownView}>\n              <img\n                src={BoardViewImg}\n                style={boardViewStyle}\n                onClick={(e) => e.preventDefault()}\n                alt=\"board icon\"\n              />\n            </Dropdown>\n          </Col>\n\n          <Col style={{ marginTop: \"5rem\", marginRight: \"3rem\" }}>\n            <SortBy sortBoards={sortBoards} />\n          </Col>\n        </Row>\n      </Row>\n      <Row>\n        {listView\n          ? boards.map((el) => {\n              return (\n                <Card.Grid style={gridStyle}>\n                  <Board\n                    key={el.id}\n                    boardTitle={el.title}\n                    boardsItems={el.items ? el.items : []}\n                    boardsId={el.id}\n                  />\n                </Card.Grid>\n              );\n            })\n          : boards.map((el) => {\n              return (\n                <List.Item>\n                  <ListView\n                    key={el.id}\n                    boardTitle={el.title}\n                    boardsItems={el.items ? el.items : []}\n                    boardsId={el.id}\n                  />\n                </List.Item>\n              );\n            })}\n      </Row>\n    </div>\n  );\n};\n\nexport default BoardsContainer;\n","import React from \"react\";\nimport \"antd/dist/antd.css\";\nimport { PageHeader, Typography, Col } from \"antd\";\n\n\n\nconst About = () => {\n\n  const { Title } = Typography;\n  const { Paragraph } = Typography;\n  const pageTitle = <Title className=\"about-title\">About</Title>;\n\n  const jennet = <a className=\"link\" href=\"https://github.com/jennethydyrova\">Jennet Hydyrova</a>;\n  const majd = <a className=\"link\" href=\"https://github.com/majdajroudi\">Majd Ajroudi</a>;\n  const recoded = (\n    <a className=\"link\" href=\"https://www.re-coded.com/istanbul-coding-bootcamp-spring-2020\">\n      {\" \"}\n      Re:coded Frontend Web Development Bootcamp\n    </a>\n  );\n\n  return (\n    <>\n      <Col span={16}>\n        <PageHeader title={pageTitle}>\n          <Paragraph className=\"about\" style={{ fontSize: \"18px\" }}>\n            This website was designed by {jennet} and {majd} as a project for\n            the\n            {recoded}. ReactJS framework was used to add the functionalities\n            provided in the website. Firebase was used to create and manage the\n            database Ant design was used to style the website.\n          </Paragraph>\n        </PageHeader>\n      </Col>\n    </>\n  );\n};\n\nexport default About;\n","import React, { useState, useEffect } from \"react\";\nimport db from \"../../firebaseConfig\";\nimport { Collapse, Card } from \"antd\";\n\nconst CompletedTasks = () => {\n  const [completedTaskList, setCompletedTaskList] = useState([]);\n  const { Panel } = Collapse;\n\n  const fetchCompletedTasks = async () => {\n    const res = await db.firestore().collection(\"boards\").get();\n    const data = res.docs;\n    for (let i = 0; i < data.length; i++) {\n      setCompletedTaskList((prevState) => [\n        ...prevState,\n        { ...data[i].data(), id: data[i].id },\n      ]);\n    }\n    return completedTaskList;\n  };\n\n  useEffect(() => {\n    fetchCompletedTasks();\n    // eslint-disable-next-line\n  }, []);\n\n  const gridStyle = {\n    width: \"25%\",\n    textAlign: \"center\",\n    margin: \"10px\",\n  };\n\n  return completedTaskList.map((item) => {\n    return (\n      <Collapse\n        style={{ width: \"100%\" }}\n        defaultActiveKey={[\"1\"]}\n        className=\"completed\"\n      >\n        <Panel className=\"completed-panel\" header={item.title} key={item.id}>\n          {item.items\n            .filter((el) => el.completed === true)\n            .map((el) => {\n              return (\n                <Card.Grid\n                  className=\"completed-card\"\n                  title={el.title}\n                  style={gridStyle}\n                >\n                  <p>Title: {el.title}</p>\n                  <p>Assigner: {el.assigner}</p>\n                  <p>Assignee: {el.assignee}</p>\n                  <p>Due date: {el.due}</p>\n                </Card.Grid>\n              );\n            })}\n        </Panel>\n      </Collapse>\n    );\n  });\n};\n\nexport default CompletedTasks;\n","import { useHistory } from \"react-router-dom\";\nimport { Form, Input, Button } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport React, { useState, useEffect } from \"react\";\nimport firebase from \"../../firebaseConfig\";\nrequire(\"firebase/auth\");\n\nconst Login = () => {\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  // eslint-disable-next-line\n  const [error, setError] = useState(\"\");\n  // eslint-disable-next-line\n  const [currentUser, setCurrentUser] = useState(null);\n\n  const history = useHistory();\n\n  const layout = {\n    labelCol: {\n      span: 8,\n    },\n    wrapperCol: {\n      span: 16,\n    },\n  };\n  const tailLayout = {\n    wrapperCol: {\n      offset: 8,\n      span: 16,\n    },\n  };\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(setCurrentUser);\n  }, []);\n\n  const handleSignIn = () => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(function () {\n        setTimeout(() => {\n          history.push(\"/\");\n        }, 1500);\n\n        alert(\"You are in!\");\n      })\n      .catch(function (error) {\n        switch (error) {\n          case \"auth/invalid-email\":\n          case \"auth/email-already-in-use\":\n            setError(error.message);\n            break;\n          case \"auth/weak-password\":\n            setError(error.message);\n            break;\n          default:\n            setError(error.message);\n        }\n      });\n  };\n\n  const handleSignUp = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(alert(\"Thanks for registering!\"))\n      .catch(function (error) {\n        switch (error) {\n          case \"auth/invalid-email\":\n          case \"auth/email-already-in-use\":\n            setError(error.message);\n            break;\n          case \"auth/weak-password\":\n            setError(error.message);\n            break;\n          default:\n            setError(\"Error\");\n            setError(\"Error\");\n        }\n      });\n  };\n  const handleEmail = (e) => {\n    setEmail(e.target.value);\n  };\n  const handlePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginTop: \"10rem\",\n      }}\n    >\n      <Form\n        {...layout}\n        name=\"basic\"\n        initialValues={{\n          remember: true,\n        }}\n      >\n        <Input\n          label=\"Email\"\n          name=\"email\"\n          value={email}\n          placeholder=\"Email\"\n          onChange={(e) => handleEmail(e)}\n          style={{ width: \"70%\", margin: \"0.5rem\" }}\n          rules={[\n            {\n              required: true,\n              message: \"Please input your username!\",\n            },\n          ]}\n        ></Input>\n        <Input\n          label=\"Password\"\n          name=\"password\"\n          value={password}\n          type=\"password\"\n          placeholder=\"Password\"\n          onChange={(e) => handlePassword(e)}\n          style={{ width: \"70%\", margin: \"0.5rem\" }}\n          rules={[\n            {\n              required: true,\n              message: \"Please input your password!\",\n            },\n          ]}\n        ></Input>\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n          <Form.Item {...tailLayout}>\n            <Button\n              className=\"login-button\"\n              htmlType=\"submit\"\n              style={{ marginRight: \"2rem\", marginLeft: \"0.5rem\" }}\n              onClick={(e) => handleSignIn(e)}\n            >\n              Sign In\n            </Button>\n          </Form.Item>\n          <Form.Item {...tailLayout}>\n            <Button\n              className=\"login-button\"\n              htmlType=\"submit\"\n              onClick={(e) => handleSignUp(e)}\n            >\n              Sign Up\n            </Button>\n          </Form.Item>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport db from \"../../firebaseConfig\";\nimport \"antd/dist/antd.css\";\nimport { Button } from \"antd\";\n\nconst Header = () => {\n  // eslint-disable-next-line\n  const [error, setError] = useState(\"\");\n\n  const history = useHistory();\n\n  const handleLogOut = () => {\n    db.auth()\n      .signOut()\n      .then(function () {\n        history.push(\"/login\");\n      })\n      .catch(function (error) {\n        setError(error.message);\n      });\n  };\n\n  return (\n    <div className=\"header\">\n      <Button\n        variant=\"outline-info\"\n        style={{ marginTop: \"10px\" }}\n        type=\"submit\"\n        size=\"sm\"\n        onClick={(e) => handleLogOut(e)}\n        className=\"form-btn logout-btn\"\n      >\n        Log Out\n      </Button>\n    </div>\n  );\n};\nexport default Header;\n","import React, { useState } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { Menu } from \"antd\";\nimport {\n  HomeOutlined,\n  CheckOutlined,\n  QuestionCircleOutlined,\n} from \"@ant-design/icons\";\n\nconst Sider = () => {\n  const [theme, setTheme] = useState({\n    theme: \"dark\",\n    current: \"1\",\n  });\n\n  const handleClick = (e) => {\n    setTheme({ ...theme, current: e.key });\n  };\n\n  return (\n    <>\n      <br />\n      <br />\n      <Menu\n        theme={theme.theme}\n        style={{ width: \"100%\", backgroundColor: \"rgb(41, 44, 56)\" }}\n        defaultOpenKeys={[\"sub1\"]}\n        selectedKeys={[theme.current]}\n        mode=\"inline\"\n        className=\"sider-element\"\n      >\n        <Menu.Item\n          className=\"navbarItem1\"\n          key=\"1\"\n          icon={<HomeOutlined />}\n          onClick={(e) => handleClick(e)}\n        >\n          <NavLink to=\"/\">Home</NavLink>\n        </Menu.Item>\n        <Menu.Item\n          className=\"navbarItem1\"\n          key=\"2\"\n          icon={<QuestionCircleOutlined />}\n          onClick={(e) => handleClick(e)}\n        >\n          <NavLink to=\"/about\">About</NavLink>\n        </Menu.Item>\n        <Menu.Item\n          className=\"navbarItem1\"\n          key=\"3\"\n          icon={<CheckOutlined />}\n          onClick={(e) => handleClick(e)}\n        >\n          <NavLink to=\"/completed\">Completed</NavLink>\n        </Menu.Item>\n      </Menu>\n    </>\n  );\n};\n\nexport default Sider;\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Redirect, Route } from \"react-router-dom\";\nimport BoardsContainer from \"./containers/boards/BoardsContainer\";\nimport About from \"./components/about/index\";\nimport CompletedTasks from \"./components/completed/index\";\nimport Login from \"./components/login/index\";\nimport HeaderComponent from \"./components/header/index\";\nimport \"antd/dist/antd.css\";\nimport Sidebar from \"./components/navbar/index\";\nimport firebase from \"./firebaseConfig\";\nimport { Layout } from \"antd\";\nimport \"./App.css\";\n\nconst { Header, Sider, Content } = Layout;\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null);\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        setCurrentUser(true);\n      } else {\n        setCurrentUser(false);\n      }\n    });\n  }, []);\n\n  return (\n    <Router>\n      <Layout style={{ height: \"100vh\" }}>\n        <Sider className=\"sider-element\" collapsible>\n          <Sidebar />\n        </Sider>\n        <Layout className=\"layout\">\n          <Header className=\"header\">\n            {currentUser && <HeaderComponent />}\n          </Header>\n          <Content className=\"content\">\n            {\" \"}\n            <Route exact path=\"/login\">\n              {currentUser ? <Redirect to=\"/\" /> : <Login />}\n            </Route>\n            <Route exact path=\"/\">\n              {!currentUser ? <Redirect to=\"/login\" /> : <BoardsContainer />}\n            </Route>\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/completed\">\n              {!currentUser ? <Redirect to=\"/login\" /> : <CompletedTasks />}\n            </Route>\n          </Content>\n        </Layout>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App className=\"main-app\"/>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}